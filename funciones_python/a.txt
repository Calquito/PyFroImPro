function Y=clean_ksvd(TextPath,D)
    I=imread(TextPath);
    [m_org, n_org]=size(I);
    Z=im2double(block_img_8(I));
    
    [m_z,n_z]=size(Z);
    mBlock=m_z/8; nBlock=n_z/8;
    
    VecBlock=im2block8(Z);
    
    t=10; iter=0;
    blockImg=[];
    for i=1:mBlock
        Aux=[];
        for j=1:nBlock
            iter=iter+1;
            y=VecBlock(:,iter);
            D_d=decim_mat(D,y);
            x = OMP(y,D_d,t);
            Aux=[Aux reshape(D*x,[8,8])];
        end
        blockImg=[blockImg; Aux];
    end
    
    Y=im2uint8(imresize(blockImg,[m_org,n_org]));
end


function Y=im2block8(X)
    [m,n]=size(X);
    b1=m/8; b2=n/8;
    Y=[];
    for i=1:b1
        for j=1:b2
            Aux=X((i-1)*8+1:i*8,(j-1)*8+1:j*8);
            Y=[Y Aux(:)];
        end
    end
end


function D=decim_mat(D0,y)
    n=length(y); D=D0; m=size(D0,2);
    for i=1:n
        if y(i)==0
            D(i,:)=zeros(1,m);
        end
    end
end

function Y=block_img_8(X)
    [m,n]=size(X);
    s1=mod(m,8);
    s2=mod(n,8);
    if and(s1==0,s2==0)
        m1=m; n1=n;
    elseif and(s1==0,s2~=0)
        if s2<=4
            m1=m; n1=n-s2;
        else
            m1=m; n1=n+8-s2;
        end        
    elseif and(s1~=0,s2==0)
        if s1<=4
            m1=m-s1; n1=n;
        else
            m1=m+8-s1; n1=n;
        end
    elseif and(s1~=0,s2~=0)
        if s1<=4
            m1=m-s1;
        else
            m1=m+8-s1;
        end
        if s2<=4
            n1=n-s2;
        else
            n1=n+8-s2;
        end        
    end       
    Y=imresize(X,[m1,n1]);
end