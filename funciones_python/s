function [] = ImageCompression(Textpath,radio,Opcion)


     ExpectedOptions = {'BRP','SVD'};%%%% Validación de la opción
     Opcion=upper(strrep(Opcion,' ',''));
     ValidarOpcion=@(x) any(strcmp(Opcion,ExpectedOptions));
     if ValidarOpcion(Opcion)==0 
        error(['Opción no admitida. Debe indicar BRP o SVD. Usted digitó ',Opcion]);
     end
%%%% Fin de la validación
ima=imread(Textpath);
if size(ima,3)==3
   L=im2double(rgb2gray(ima)); %%% Convierte la imagen en matriz de tipo doble
else
   L=im2double(ima);
end
[m,n]=size(L);
Minmn=min(m,n);
%%%%%% Validaciones
Validporcentaje = @(x) isnumeric(x) && (x>1/Minmn) && (x <= 1);
if Validporcentaje(radio)==0 
    error(['El radio de compresión indicado para esta imagen no es válido. Deber ser un decimal d, tal que ',num2str(1/Minmn),'<=d<=1.']);
end
%%%%%% Fin de validaciones
r=floor(radio*Minmn);
if Opcion=='BRP'
   [A,B]=LowRankMatrixBRP(L,'r',r);
else
    [U,S,V]=svd(L);
    Urecortada=U(:,1:r);
    Srecortada=S(1:r,1:r);
    Vrecortada=V(:,1:r);
    A=Urecortada*Srecortada;
    B=Vrecortada.';
end
LTilde=A*B;
toc
direccion=strcat('Results');
if exist(direccion)~=7
    mkdir(direccion);
end
dlmwrite('Results\L.txt',L);
dlmwrite('Results\A.txt',A);
dlmwrite('Results\B.txt',B);
imwrite(double2uint8(L),'Results\OriginalImage.jpg');
imwrite(double2uint8(LTilde),'Results\CompressedImage.jpg');
endLow